{"version":3,"sources":["api/service.js","components/projects/AddProject.js","components/projects/ProjectList.js","components/projects/EditProject.js","components/tasks/AddTask.js","components/projects/ProjectDetails.js","components/auth/auth-service.js","components/navbar/Navbar.js","components/tasks/TaskDetails.js","components/auth/Signup.js","components/auth/Login.js","components/auth/protected-routes.js","App.js","serviceWorker.js","index.js"],"names":["service","axios","create","baseURL","process","errorHandler","err","api_service","handleUpload","theFile","console","log","post","then","res","data","catch","saveNewThing","newThing","AddProject","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","event","preventDefault","_this$state","state","title","description","imageUrl","withCredentials","getData","setState","error","handleChange","_event$target","target","name","value","defineProperty","handleFileUpload","e","files","uploadData","FormData","append","response","secure_url","_this2","react_default","a","createElement","onSubmit","type","onChange","Component","ProjectList","getAllProjects","get","concat","responseFromApi","listOfProjects","style","width","float","map","project","key","_id","react_router_dom","to","tasks","task","index","projects_AddProject","EditProject","put","theProject","history","push","handleChangeTitle","handleChangeDesc","AddTask","projectID","getTheProject","toggleForm","isShowing","showAddTaskForm","onClick","ProjectDetails","getSingleProject","params","match","id","renderEditForm","projects_EditProject","assign","renderAddTaskForm","tasks_AddTask","deleteProject","delete","ownershipCheck","loggedInUser","owner","src","alt","length","AuthService","signup","username","password","loggedin","login","logout","Navbar","logoutUser","getUser","nextProps","objectSpread","className","textDecoration","TaskDetails","getTheTask","taskId","theTask","Signup","Login","protectedRoute","_ref","component","user","rest","objectWithoutProperties","react_router","render","pathname","from","location","App","getTheUser","userObj","_this3","fetchUser","navbar_Navbar","userInSession","protected_routes","exact","path","auth_Login","auth_Signup","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19d261b2.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  // withCredentials: true // => you might need this when having the users in the app \n});\n\nconst errorHandler = err => {\n  // console.error(err);\n  throw err;\n};\n\nexport default {\n  service,\n\n  handleUpload(theFile) {\n    console.log('file in service: ', theFile)\n    return service.post('/upload', theFile)\n      .then(res => res.data)\n      .catch(errorHandler);\n  },\n\n  saveNewThing(newThing) {\n    // console.log('new thing is: ', newThing)\n    return service.post('/things/create', newThing)\n      .then(res => res.data)\n      .catch(errorHandler);\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport service from '../../api/service';\n\nclass AddProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      description: \"\",\n      imageUrl: \"\"\n    };\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const { title, description, imageUrl } = this.state;\n\n    axios.post(process.env.REACT_APP_API_URL + \"/projects\", { title, description, imageUrl }, { withCredentials: true })\n      .then(() => {\n        this.props.getData();\n        this.setState({ title: \"\", description: \"\", imageUrl: \"\" });\n      })\n      .catch(error => console.log(error))\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleFileUpload = e => {\n    console.log(\"The file to be uploaded is: \", e.target.files[0]);\n\n    const uploadData = new FormData();\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n\n    service.handleUpload(uploadData)\n      .then(response => {\n        this.setState({ imageUrl: response.secure_url });\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Title:</label>\n          <input type=\"text\" name=\"title\" value={this.state.title} onChange={e => this.handleChange(e)} />\n          <label>Description:</label>\n          <textarea name=\"description\" value={this.state.description} onChange={e => this.handleChange(e)} />\n          <input\n            type=\"file\"\n            onChange={(e) => this.handleFileUpload(e)} />\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AddProject;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nimport AddProject from './AddProject'; // <== !!!\n\nclass ProjectList extends Component {\n  constructor() {\n    super();\n    this.state = { listOfProjects: [] };\n  }\n\n  getAllProjects = () => {\n    axios.get(`${process.env.REACT_APP_API_URL}/projects`, { withCredentials: true })\n      .then(responseFromApi => {\n        this.setState({\n          listOfProjects: responseFromApi.data\n        })\n      }).catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n    this.getAllProjects();\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{ width: '60%', float: \"left\" }}>\n          {this.state.listOfProjects.map(project => {\n            return (\n              <div key={project._id}>\n                <Link to={`/projects/${project._id}`}>\n                  <h3>{project.title}</h3>\n                </Link>\n                {/* 🥁 added so the tasks can be displayed:  🥁 */}\n                <ul>\n                  {project.tasks.map((task, index) => {\n                    return <li key={index}>{task.title}</li>\n                  })}\n                </ul>\n                {/* <p style={{maxWidth: '400px'}} >{project.description} </p> */}\n              </div>\n            )\n          })\n          }\n        </div>\n        <div style={{ width: '40%', float: \"right\" }}>\n          <AddProject getData={() => this.getAllProjects()} /> {/* <== !!! */}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ProjectList;","\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass EditProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: this.props.theProject.title,\n      description: this.props.theProject.description\n    }\n  }\n\n\n  handleFormSubmit = (event) => {\n    const title = this.state.title;\n    const description = this.state.description;\n\n    event.preventDefault();\n\n    axios.put(`${process.env.REACT_APP_API_URL}/projects/${this.props.theProject._id}`, { title, description })\n      .then(() => {\n        // this.props.getTheProject();\n        // after submitting the form, redirect to '/projects'\n        this.props.history.push('/projects');\n      })\n      .catch(error => console.log(error))\n  }\n\n  handleChangeTitle = (event) => {\n    this.setState({\n      title: event.target.value\n    })\n  }\n\n  handleChangeDesc = (event) => {\n    this.setState({\n      description: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <hr />\n        <h3>Edit form</h3>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Title:</label>\n          <input type=\"text\" name=\"title\" value={this.state.title} onChange={e => this.handleChangeTitle(e)} />\n          <label>Description:</label>\n          <textarea name=\"description\" value={this.state.description} onChange={e => this.handleChangeDesc(e)} />\n\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default EditProject;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass AddTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { title: \"\", description: \"\", isShowing: false };\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const title = this.state.title;\n    const description = this.state.description;\n    const projectID = this.props.theProject._id; \n    axios.post(process.env.REACT_APP_API_URL + \"/tasks\", { title, description, projectID })\n      .then(() => {\n        this.props.getTheProject();\n        this.setState({ title: \"\", description: \"\" });\n      })\n      .catch(error => console.log(error))\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  toggleForm = () => {\n    this.setState({\n      isShowing: !this.state.isShowing\n    });\n\n    // if (!this.state.isShowing) {\n    //   this.setState({ isShowing: true });\n    // } else {\n    //   this.setState({ isShowing: false });\n    // }\n  }\n\n  showAddTaskForm = () => {\n    if (this.state.isShowing) {\n      return (\n        <div>\n          <h3>Add Task</h3>\n          <form onSubmit={this.handleFormSubmit}>\n            <label>Title:</label>\n            <input type=\"text\" name=\"title\" value={this.state.title} onChange={e => this.handleChange(e)} />\n            <label>Description:</label>\n            <textarea name=\"description\" value={this.state.description} onChange={e => this.handleChange(e)} />\n\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <hr />\n        <button onClick={() => this.toggleForm()}> Add task </button>\n        {this.showAddTaskForm()}\n      </div>\n    )\n  }\n}\n\nexport default AddTask;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport EditProject from './EditProject';\nimport AddTask from '../tasks/AddTask';\n\nclass ProjectDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    // this.getSingleProject = this.getSingleProject.bind(this);\n  }\n\n  componentDidMount() {\n    this.getSingleProject();\n  }\n\n  getSingleProject = () => {\n    const { params } = this.props.match;\n    axios.get(`${process.env.REACT_APP_API_URL}/projects/${params.id}`)\n      .then(responseFromApi => {\n        const theProject = responseFromApi.data;\n        this.setState(theProject);\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  renderEditForm = () => {\n    if (!this.state.title) {\n      this.getSingleProject();\n    } else {\n      //                                                    {...props} => so we can have 'this.props.history' in Edit.js\n      //                                                                                          ^\n      //                                                                                          |\n      return <EditProject theProject={this.state} getTheProject={this.getSingleProject} {...this.props} />\n\n    }\n  }\n\n  renderAddTaskForm = () => {\n    if (!this.state.title) {\n      this.getSingleProject();\n    } else {\n      // pass the project and method getSingleProject() as a props down to AddTask component\n      return <AddTask theProject={this.state} getTheProject={() => this.getSingleProject} />\n    }\n  }\n\n  deleteProject = () => {\n    const { params } = this.props.match;\n    axios.delete(`${process.env.REACT_APP_API_URL}/projects/${params.id}`, { withCredentials: true })\n      .then(() => {\n        this.props.history.push('/projects');\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  ownershipCheck = (project) => {\n    if (this.props.loggedInUser && project.owner === this.props.loggedInUser._id) {\n      return (\n        <div>\n          <div>{this.renderEditForm()} </div>\n          <button onClick={() => this.deleteProject(this.state._id)}>Delete project</button>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.state.title}</h1>\n        <p>{this.state.description}</p>\n        <img src={this.state.imageUrl} alt={this.state.title}/>\n        {/* show the task heading only if there are tasks */}\n        {this.state.tasks && this.state.tasks.length > 0 && <h3>Tasks </h3>}\n        {/* map through the array of tasks and... */}\n        {this.state.tasks && this.state.tasks.map((task, index) => {\n          return (\n            <div key={index}>\n              {/* ... make each task's title a link that goes to the task details page */}\n              <Link to={`/projects/${this.state._id}/tasks/${task._id}`}>\n                {task.title}\n              </Link>\n            </div>\n          )\n\n        })}\n        <div>\n          {this.ownershipCheck(this.state)}\n        </div>\n        <br />\n        <div>{this.renderAddTaskForm()} </div>\n        <br /><br /><br /><br /><br />\n        <Link to={'/projects'}>Back to projects</Link>\n      </div>\n    )\n  }\n}\n\nexport default ProjectDetails;","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {  \n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n  \n  logout = () => {\n    return this.service.get('/logout')\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../auth/auth-service';\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] })\n  }\n\n  logoutUser = () => {\n    this.service.logout()\n      .then(() => {\n        this.setState({ loggedInUser: null });\n        this.props.getUser(null);\n      })\n  }\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"nav-style\">\n          <ul>\n            <li>Welcome, {this.state.loggedInUser.username}</li>\n            <li>\n              <Link to='/projects' style={{ textDecoration: 'none' }}>Projects</Link>\n            </li>\n            <li>\n              <Link to='/'>\n                <button onClick={() => this.logoutUser()}>Logout</button>\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      )\n    } else {\n      return (\n        <div>\n          <nav className=\"nav-style\">\n            <ul>\n              <li><Link to='/' style={{ textDecoration: 'none' }}>Login</Link></li>\n              <li><Link to='/signup' style={{ textDecoration: 'none' }}>Signup</Link></li>\n            </ul>\n          </nav>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Navbar;","\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass TaskDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.getTheTask();\n  }\n\n  getTheTask = () => {\n    const { params } = this.props.match;\n    axios.get(`${process.env.REACT_APP_API_URL}/projects/${params.id}/tasks/${params.taskId}`)\n      .then(responseFromApi => {\n        const theTask = responseFromApi.data;\n        this.setState(theTask);\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.state.title}</h1>\n        <p>{this.state.description}</p>\n      </div>\n    )\n  }\n}\n\nexport default TaskDetails;","import React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Link } from 'react-router-dom';\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  // handleChange() and handleSubmit() will be added here\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.signup(username, password)\n      .then(response => {\n        this.setState({\n          username: \"\",\n          password: \"\",\n        });\n        this.props.getUser(response);\n      })\n      .catch(error => console.log(error))\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n\n          <input type=\"submit\" value=\"Signup\" />\n        </form>\n\n        <p>Already have account?\n          <Link to={\"/\"}> Login</Link>\n        </p>\n\n      </div>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Link } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({ username: \"\", password: \"\" });\n        this.props.getUser(response)\n      })\n      .catch(error => console.log(error))\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n\n          <input type=\"submit\" value=\"Login\" />\n        </form>\n        <p>Don't have account?\n            <Link to={\"/signup\"}> Signup</Link>\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n//<ProtectedRoute user={this.state.loggedInUser} path='/projects/:id' component={ProjectDetails} />\n\nconst protectedRoute  = ({component: Component, user, ...rest}) => {\n  console.log({component: Component, user, ...rest})\n    return (\n      <Route\n        {...rest}\n        render={ props  => {\n            if(user){\n              return <Component {...props} loggedInUser={user}/>\n            } else {\n              return <Redirect to={{pathname: '/', state: {from: props.location}}} />\n            }\n          }\n        }\n      />\n    )\n}\nexport default protectedRoute;","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\n// import AddProject from './components/projects/AddProject';\nimport ProjectList from './components/projects/ProjectList';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport Navbar from './components/navbar/Navbar';\nimport TaskDetails from './components/tasks/TaskDetails';\nimport Signup from './components/auth/Signup';\nimport AuthService from './components/auth/auth-service';\nimport Login from './components/auth/Login';\nimport ProtectedRoute from './components/auth/protected-routes';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: null\n    }\n    this.service = new AuthService();\n    // this.fetchUser = this.fetchUser.bind(this);\n  }\n\n  fetchUser() {\n    if (this.state.loggedInUser === null) {\n      this.service.loggedin()\n        .then(response => {\n          this.setState({\n            loggedInUser: response\n          })\n        })\n        .catch(err => {\n          this.setState({\n            loggedInUser: false\n          })\n        })\n    }\n  }\n\n  getTheUser = (userObj) => {\n    this.setState({\n      loggedInUser: userObj\n    })\n  }\n\n  render() {\n    this.fetchUser();\n    if (this.state.loggedInUser) {\n      return (\n        <div className=\"App\">\n          <Navbar userInSession={this.state.loggedInUser} getUser={this.getTheUser} />\n          <Switch>\n            <ProtectedRoute user={this.state.loggedInUser} exact path='/projects/:id' component={ProjectDetails} />\n            <ProtectedRoute user={this.state.loggedInUser} exact path='/projects' component={ProjectList} />\n            <ProtectedRoute user={this.state.loggedInUser} exact path=\"/projects/:id/tasks/:taskId\" component={TaskDetails} />\n          </Switch>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <Navbar userInSession={this.state.loggedInUser} />\n          <Switch>\n            <Route exact path='/' render={() => <Login getUser={this.getTheUser} />} />\n            <Route exact path='/signup' render={() => <Signup getUser={this.getTheUser} />} />\n            <ProtectedRoute user={this.state.loggedInUser} exact path='/projects/:id' component={ProjectDetails} />\n            <ProtectedRoute user={this.state.loggedInUser} exact path='/projects' component={ProjectList} />\n            <ProtectedRoute user={this.state.loggedInUser} exact path=\"/projects/:id/tasks/:taskId\" component={TaskDetails} />\n          </Switch>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>\n\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}